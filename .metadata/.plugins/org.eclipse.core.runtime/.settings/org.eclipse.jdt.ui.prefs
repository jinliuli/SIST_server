content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="com.test.java.obj.Employee"><rhs name\="com.test.java.obj.Employee"/></lhs><lhs name\="com.test.java.obj.Child"><rhs name\="com.test.java.obj.Child"/></lhs><lhs name\="com.test.java.obj.Parent"><rhs name\="com.test.java.obj.Parent"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.String"/><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.Vector"><rhs name\="java.util.Vector"/></lhs><lhs name\="java.io.OutputStream"><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.io.FileOutputStream"/><rhs name\="java.io.FileInputStream"/><rhs name\="java.io.FileReader"/><rhs name\="java.io.BufferedReader"/><rhs name\="java.util.Scanner"/><rhs name\="java.io.BufferedWriter"/><rhs name\="java.io.FileWriter"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.io.FileOutputStream"/><rhs name\="java.io.FileInputStream"/><rhs name\="java.io.FileReader"/><rhs name\="java.io.BufferedReader"/><rhs name\="java.util.Scanner"/><rhs name\="java.io.BufferedWriter"/><rhs name\="java.io.FileWriter"/></lhs><lhs name\="java.io.Flushable"><rhs name\="java.io.FileOutputStream"/><rhs name\="java.io.BufferedWriter"/><rhs name\="java.io.FileWriter"/></lhs><lhs name\="java.io.FileOutputStream"><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.InputStream"><rhs name\="java.io.FileInputStream"/></lhs><lhs name\="java.io.FileInputStream"><rhs name\="java.io.FileInputStream"/></lhs><lhs name\="java.io.OutputStreamWriter"><rhs name\="java.io.FileWriter"/></lhs><lhs name\="java.io.Writer"><rhs name\="java.io.BufferedWriter"/><rhs name\="java.io.FileWriter"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/><rhs name\="java.io.BufferedWriter"/><rhs name\="java.io.FileWriter"/></lhs><lhs name\="java.io.FileWriter"><rhs name\="java.io.FileWriter"/></lhs><lhs name\="java.io.BufferedWriter"><rhs name\="java.io.BufferedWriter"/></lhs><lhs name\="java.io.Reader"><rhs name\="java.io.FileReader"/><rhs name\="java.io.BufferedReader"/></lhs><lhs name\="java.lang.Readable"><rhs name\="java.io.FileReader"/><rhs name\="java.io.BufferedReader"/></lhs><lhs name\="java.io.BufferedReader"><rhs name\="java.io.BufferedReader"/></lhs><lhs name\="com.test.java.file.ScoreService"><rhs name\="com.test.java.file.ScoreService"/></lhs><lhs name\="com.test.java.file.ScoreView"><rhs name\="com.test.java.file.ScoreView"/></lhs><lhs name\="com.test.java.file.ScoreDAO"><rhs name\="com.test.java.file.ScoreDAO"/></lhs><lhs name\="com.test.java.file.ScoreDTO"><rhs name\="com.test.java.file.ScoreDTO"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.util.Iterator"><rhs name\="java.util.Scanner"/></lhs></history>
content_assist_number_of_computers=17
eclipse.preferences.version=1
java_keyword=231,150,84
java_keyword_return=231,150,84
java_multi_line_comment=234,234,234
java_single_line_comment=234,234,234
markOccurrences=false
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles.version=22
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="java-statements" deleted\="false" description\="try catch block" enabled\="true" id\="org.eclipse.jdt.ui.templates.try" name\="try_catch">try {\r\n\t${line_selection}${cursor}\r\n} catch (${Exception} ${exception_variable_name}) {\r\n\tSystem.out.println("${primary_type_name}.${enclosing_method}");\r\n\te.printStackTrace();\r\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="\uC218\uC5C5\uC6A9" enabled\="true" name\="scanner">Scanner scan \= new Scanner(System.in);</template></templates>
semanticHighlighting.class.color=35,175,235
semanticHighlighting.parameterVariable.color=159,196,255
semanticHighlighting.typeArgument.color=201,149,230
smart_semicolon=true
sourceHoverBackgroundColor=47,47,47
spelling_locale_initialized=true
typefilter_migrated_2=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
